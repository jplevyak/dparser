1.35    Fix $left and $right.  Make priority independent of associativity.

1.34    Add user data field to D_Parser struct.

1.33    Switched to a priority heap to detect shared subtrees.

1.32    Fixed bugs with priorities.

1.29    Fixed bug with handling of priorities and associativity (thanx Sjoerd Cranen)
        Fixed a bug in error recovery.
        Fixed a slash escapes in string literals (thanx Sjoerd Cranen)

1.28    Fixed bug with actions containing commments containing '
        Python 2.6+ support, thanx to jonas@lophus.org

1.27    Fixed error with input ending on C++ style comment (thanx voiz)

1.26    Unicode fix thanx to agsags
        Fixed some compilation warnings

1.25    Fix const issues thanx to Harald Gutsche
        Fix MINGW issue where it lies about the size of a file

1.24    Fixed bug in with -R option
        Prevented substitutions in strings in code 

1.23    Whitespace parsers now inherit attriutes of the parent
        Fixed (another) error recovery crash bug
        Add ability to disable freelists for better valgrind results

1.22    Add ambiguity callbacks for python (Humberto Abdelnur)
        Fixed error recovery crash bug
        Fixed column number bug.
        Fixed missing column and line numbers when using a whitespace subparser.
 
1.21    Fix 2 issues with documentation (Holger Waechtler)

1.20    Fixed a couple Verilog issues (thanx to Brian Pharris)
        Python Unicode support (thanx to Simon Law)
        Added disabiguation switches to test_parser
        Fixed potential hang in Error Recovery
        Warning free under GCC 4.3.2
        Use struct for location in callbacks (thanx to Holger Waechtler)

1.19    Fixed memory leak (thanx Humberto Abdelnur)
        Updated to current SWIG  (thanx Humberto Abdelnur)
        Added support for repeating elements (elem@1:3) 1 to 3 times

1.18    added -o option for output file
        use ranlib for Darwin compatibility
        fixed some memory leaks
        fix greediness with simpler algorithm
        Basic unicode support

1.17    Fixed a bug which could result in incorrect actions being called

1.16    Use flag to disable strict aliasing optimizations in GCC
        Add options for greedy and height disambiguation

1.15    Removed call to exec in python interface (Brian Sabbey)
        Fix binary_op_left in python interface (Brian Sabbey)

1.14	Support generation of code from a grammar to print 
          the parse tree instead of executing the actions (Wlodzimierz Bzyl)
        Support user-defined print functions (Wlodzimierz Bzyl)
        Support disambiguation based on greedyness (optional)
        Fixed a bug in the python support which prevented
          the use of associativity and priority
        Add support for 64-bit systems to the python interface

1.13	Fixed compilation issue with use of GC option.
	Fixed memory leak with reusing a parser with a whitespace production.
	Fixed a potential memory leak in the python interface.
	Fixed memory leaks with the mkdparser library.

1.12	Fixed some portability ANSI-C issues.
	Fixed a bug where actions would not fire with regex productions.
	Changed the binary interface ${action} placement.

1.11	Added new interfaces for binary output to memory/file
	Fixed bug in ambiguity handling

1.10	Fixed bug in binary output
	Port to x64

1.9	Fixed bug in error recovery
	Added support for trailing context in regex ("foo/bar")
        Fixed bug in longest match scanning
	Fixed bug in d_ws_before
	Use str(r)chr instead of non-standard (r)index
	Binary table format for python (Brian Sabbey)

1.8	Added the ability to 'include' subgrammars
	Add %< %> as global code indicators
	Add $#n for number of children of element n
	Add ${child 1,2,3} for 3rd child of 2nd child of 1st child
	Added option for fixup_EBNF_productions
	Changed the way fixups work to be more consistent
	Add naming of regex productions
	Add support for dynamic scoping to symtab
	Improved line numbering of generated code
	Add -I option identify grammar by filename
 	Fixed support for very large scanners

1.7	Another fix for MINGW32
	Fix to state splitting
	Add start_state to table of symbols
	Updated python interface (thanx to Brian Sabbey)
	Added option terminal option $name to name terminals
	Add option to set extension of generated code file

1.6	Fixed missing test files
 	Fixed ${declare subparser XXX}
	Fixed bug with multiple passes
	Split states based on symboltable and globals
	Added print_scope

1.5	Fixed web pages
        Fixed DEBUG compilation error
        Fixed ${scan XXX} example (g4.test.g)
        Fixed strings/chars in ANSI-C grammar 
        Fixed OSX/Darwin compilation
        Fixed ws_before/ws_after
        Added support for \xNN \d00 escape sequences
        Added support for /i (ignore case) strings/regexes
        Added support for starting in arbitrary states

1.4	Added embedded actions
 	Added default actions
	Added support for multi-pass compilation
        Added support for mixed all/longest scanners
	Enhanced python interface

1.3     Made GC version end in _gc
	Fixed symtab, changed interface and added test cases
        Fixed other bugs
 	Added verilog grammar
 	Added python grammar
	Added support for regular expression 'productions'

1.2	Fixed a bug in cmp_reduction_priorities that could result in crashes 
	Fixed a bug which could result in ambiguity on final result
          (thanx Thomas)
	Fixed a bug in fixup of internal reductions which could result
	  in incorrectly ordered actions (thanx Tomas)
	Fixed a bug in stack comparison pruning which could result in
	  incorrectly ruling out legal parses
	Added python support (thanx to Brian Sabbey)
	Added non-longest-match-only scanning

1.1	Fixed bug in fixing up internal productions
	Made the default using left recursion for EBNF internal productions

1.0	Added full unambiguous ANSI C grammar
	Added tokenizers (scanners shared over sets of states)
 	Added support for subparsers
	Cleanup of header files
	Fixed bugs in error recovery

1.0b2	Improved memory utilization
	Fixed bug with right epsilon grammars
	Added simple error recovery
	General bug fixes

1.0b1	First release
