5103 states 3067 scans 3067 shifts 3495 reductions 0 compares 0 ambiguities
((( sort ( Color  = ( struct (( white )(( | ( red ))( | ( blue ))( | ( orange ))( | ( green ))( | ( yellow ))))) ; ))( sort ( Face  = ( struct (( X )(( | ( Y ))( | ( Z ))))) ; ))( sort ( Axis  =  Face  ; ))( sort ( Position  = ( struct (( pos ( ( ((( x_  : ) Int )(( , (( y_  : ) Int ))( , (( z_  : ) Int ))( , (( nv_  : ) Face )))) ) )))) ; ))( sort ( Piece  = ( struct (( piece ( ( ((( color  : ) Color )( , (( position  : ) Position ))) ) )))) ; ))( map ((( change_rotation_face ) : (( Face  #  Axis ) ->  Face )) ; ))(( var ((((( f ) :  Face )) ; )(((( a ) :  Axis )) ; ))) eqn (((( ( ( f  ==  a ) ) ) -> )( change_rotation_face  ( ( f ( ,  a )) ) ) =  f  ; )(((( ( ( f  !=  a ) ) ) && (( ( ( f  ==  X ) ) ) && ( ( ( a  ==  Y ) ) ))) -> )( change_rotation_face  ( ( f ( ,  a )) ) ) =  Z  ; )(((( ( ( f  !=  a ) ) ) && (( ( ( f  ==  X ) ) ) && ( ( ( a  ==  Z ) ) ))) -> )( change_rotation_face  ( ( f ( ,  a )) ) ) =  Y  ; )(((( ( ( f  !=  a ) ) ) && (( ( ( f  ==  Y ) ) ) && ( ( ( a  ==  Z ) ) ))) -> )( change_rotation_face  ( ( f ( ,  a )) ) ) =  X  ; )(((( ( ( f  !=  a ) ) ) && (( ( ( f  ==  Y ) ) ) && ( ( ( a  ==  X ) ) ))) -> )( change_rotation_face  ( ( f ( ,  a )) ) ) =  Z  ; )(((( ( ( f  !=  a ) ) ) && (( ( ( f  ==  Z ) ) ) && ( ( ( a  ==  X ) ) ))) -> )( change_rotation_face  ( ( f ( ,  a )) ) ) =  Y  ; )(((( ( ( f  !=  a ) ) ) && (( ( ( f  ==  Z ) ) ) && ( ( ( a  ==  Y ) ) ))) -> )( change_rotation_face  ( ( f ( ,  a )) ) ) =  X  ; )))( map ((( pos_in_rotation ) : ((( Position  #  Axis ) #  Int ) ->  Bool )) ; ))(( var ((((( a ) :  Axis )) ; )(((( p ) :  Position )) ; )(((( i ) :  Int )) ; ))) eqn (( pos_in_rotation  ( ( p (( ,  a )( ,  i ))) ) ) = (( ( (( ( (( x_  ( ( p ) ) ) ==  i ) ) ) && ( ( ( a  ==  X ) ) )) ) ) || (( ( (( ( (( y_  ( ( p ) ) ) ==  i ) ) ) && ( ( ( a  ==  Y ) ) )) ) ) || ( ( (( ( (( y_  ( ( p ) ) ) ==  i ) ) ) && ( ( ( a  ==  Z ) ) )) ) ))) ; ))( map (((( apply_ccw_rotate ) : (((( List  (  Piece  ) ) #  Axis ) #  Nat ) -> ( List  (  Piece  ) ))) ; )((( apply_cw_rotate ) : (((( List  (  Piece  ) ) #  Axis ) #  Nat ) -> ( List  (  Piece  ) ))) ; )))(( var ((((( p ) :  Piece )) ; )(((( SP ) : ( List  (  Piece  ) ))) ; )(((( a ) :  Axis )) ; )(((( r ) :  Nat )) ; ))) eqn ((( apply_ccw_rotate  ( (( p  |>  SP )(( ,  a )( ,  r ))) ) ) = (( piece  ( (( color  ( ( p ) ) )( , ( single_ccw_pos_update  ( (( position  ( ( p ) ) )(( ,  a )( ,  r ))) ) ))) ) ) |> ( apply_ccw_rotate  ( ( SP (( ,  a )( ,  r ))) ) )) ; )(( apply_cw_rotate  ( (( p  |>  SP )(( ,  a )( ,  r ))) ) ) = (( piece  ( (( color  ( ( p ) ) )( , ( single_cw_pos_update  ( (( position  ( ( p ) ) )(( ,  a )( ,  r ))) ) ))) ) ) |> ( apply_cw_rotate  ( ( SP (( ,  a )( ,  r ))) ) )) ; )(( apply_ccw_rotate  ( (( [  ] )(( ,  a )( ,  r ))) ) ) = ( [  ] ) ; )(( apply_cw_rotate  ( (( [  ] )(( ,  a )( ,  r ))) ) ) = ( [  ] ) ; )))( map ((( order_cube ) : ((( ( (( Piece  #  Piece ) ->  Bool ) ) ) # ( List  (  Piece  ) )) -> ( List  (  Piece  ) ))) ; ))(( var ((((( x ) :  Piece )) ; )(((( xs ) : ( List  (  Piece  ) ))) ; )(((( pred_ ) : (( Piece  #  Piece ) ->  Bool ))) ; ))) eqn ((( order_cube  ( ( pred_ ( , ( [  ] ))) ) ) = ( [  ] ) ; )(( order_cube  ( ( pred_ ( , ( x  |>  xs ))) ) ) = ( insert_piece  ( ( pred_ (( ,  x )( , ( order_cube  ( ( pred_ ( ,  xs )) ) )))) ) ) ; )))( map ((( insert_piece ) : (((( ( (( Piece  #  Piece ) ->  Bool ) ) ) #  Piece ) # ( List  (  Piece  ) )) -> ( List  (  Piece  ) ))) ; ))(( var ((((( x ( ,  y )) :  Piece )) ; )(((( ys ) : ( List  (  Piece  ) ))) ; )(((( pred_ ) : (( Piece  #  Piece ) ->  Bool ))) ; ))) eqn ((( insert_piece  ( ( pred_ (( ,  x )( , ( [  ] )))) ) ) = ( [ ( x ) ] ) ; )((( pred_  ( ( x ( ,  y )) ) ) -> )( insert_piece  ( ( pred_ (( ,  x )( , ( y  |>  ys )))) ) ) = ( x  |> ( y  |>  ys )) ; )((( ( ( ! ( pred_  ( ( x ( ,  y )) ) )) ) ) -> )( insert_piece  ( ( pred_ (( ,  x )( , ( y  |>  ys )))) ) ) = ( y  |> ( insert_piece  ( ( pred_ (( ,  x )( ,  ys ))) ) )) ; )))( map ((( eqf ) : (( Piece  #  Piece ) ->  Bool )) ; ))(( var (((( i ( ,  j )) :  Piece )) ; )) eqn (( eqf  ( ( i ( ,  j )) ) ) = (( ( (((( ( (( x_  ( (( position  ( ( i ) ) )) ) ) +  1 ) ) ) *  6 ) + (( ( (( y_  ( (( position  ( ( i ) ) )) ) ) +  1 ) ) ) *  3 )) + ( z_  ( (( position  ( ( i ) ) )) ) )) ) ) < ( ( (((( ( (( x_  ( (( position  ( ( j ) ) )) ) ) +  1 ) ) ) *  6 ) + (( ( (( y_  ( (( position  ( ( j ) ) )) ) ) +  1 ) ) ) *  3 )) + ( z_  ( (( position  ( ( j ) ) )) ) )) ) )) ; ))( map (((( single_ccw_pos_update ) : ((( Position  #  Axis ) #  Int ) ->  Position )) ; )((( single_cw_pos_update ) : ((( Position  #  Axis ) #  Int ) ->  Position )) ; )))(( var ((((( a ) :  Axis )) ; )(((( p ) :  Position )) ; )(((( r ) :  Int )) ; ))) eqn ((((( ( ( Z  ==  a ) ) ) && ( pos_in_rotation  ( ( p (( ,  a )( ,  r ))) ) )) -> )( single_ccw_pos_update  ( ( p (( ,  a )( ,  r ))) ) ) = ( pos  ( ((( - ( y_  ( ( p ) ) )) +  2 )(( , ( x_  ( ( p ) ) ))( , ( z_  ( ( p ) ) ))( , ( change_rotation_face  ( (( nv_  ( ( p ) ) )( ,  Z )) ) )))) ) ) ; )(((( ( ( Y  ==  a ) ) ) && ( pos_in_rotation  ( ( p (( ,  a )( ,  r ))) ) )) -> )( single_ccw_pos_update  ( ( p (( ,  a )( ,  r ))) ) ) = ( pos  ( (( z_  ( ( p ) ) )(( , ( y_  ( ( p ) ) ))( , (( - ( x_  ( ( p ) ) )) +  2 ))( , ( change_rotation_face  ( (( nv_  ( ( p ) ) )( ,  Y )) ) )))) ) ) ; )(((( ( ( X  ==  a ) ) ) && ( pos_in_rotation  ( ( p (( ,  a )( ,  r ))) ) )) -> )( single_ccw_pos_update  ( ( p (( ,  a )( ,  r ))) ) ) = ( pos  ( (( x_  ( ( p ) ) )(( , (( - ( z_  ( ( p ) ) )) +  2 ))( , ( y_  ( ( p ) ) ))( , ( change_rotation_face  ( (( nv_  ( ( p ) ) )( ,  X )) ) )))) ) ) ; )((( ! ( pos_in_rotation  ( ( p (( ,  a )( ,  r ))) ) )) -> )( single_ccw_pos_update  ( ( p (( ,  a )( ,  r ))) ) ) =  p  ; )(((( ( ( Z  ==  a ) ) ) && ( pos_in_rotation  ( ( p (( ,  a )( ,  r ))) ) )) -> )( single_cw_pos_update  ( ( p (( ,  a )( ,  r ))) ) ) = ( pos  ( (( y_  ( ( p ) ) )(( , (( - ( x_  ( ( p ) ) )) +  2 ))( , ( z_  ( ( p ) ) ))( , ( change_rotation_face  ( (( nv_  ( ( p ) ) )( ,  Z )) ) )))) ) ) ; )(((( ( ( Y  ==  a ) ) ) && ( pos_in_rotation  ( ( p (( ,  a )( ,  r ))) ) )) -> )( single_cw_pos_update  ( ( p (( ,  a )( ,  r ))) ) ) = ( pos  ( ((( - ( z_  ( ( p ) ) )) +  2 )(( , ( y_  ( ( p ) ) ))( , ( x_  ( ( p ) ) ))( , ( change_rotation_face  ( (( nv_  ( ( p ) ) )( ,  Y )) ) )))) ) ) ; )(((( ( ( X  ==  a ) ) ) && ( pos_in_rotation  ( ( p (( ,  a )( ,  r ))) ) )) -> )( single_cw_pos_update  ( ( p (( ,  a )( ,  r ))) ) ) = ( pos  ( (( x_  ( ( p ) ) )(( , ( z_  ( ( p ) ) ))( , (( - ( y_  ( ( p ) ) )) +  2 ))( , ( change_rotation_face  ( (( nv_  ( ( p ) ) )( ,  X )) ) )))) ) ) ; )((( ! ( pos_in_rotation  ( ( p (( ,  a )( ,  r ))) ) )) -> )( single_cw_pos_update  ( ( p (( ,  a )( ,  r ))) ) ) =  p  ; )))( act ((( showcube )( : ( List  (  Piece  ) )) ; )(( rcw )( : ( Axis  #  Int )) ; )(( rccw )( : ( Axis  #  Int )) ; )))( proc ( P ( ( ((( p ) : ( List  (  Piece  ) ))) ) ) = (((( sum ((( a ) :  Axis )) . (( rcw ( ( ( a ( ,  0 )) ) )) . ( P ( ( (( order_cube  ( (( lambda ((( i ( ,  j )) :  Piece )) . ( eqf  ( ( i ( ,  j )) ) ))( , ( apply_cw_rotate  ( ( p (( ,  a )( ,  0 ))) ) ))) ) )) ) )))) + ( sum ((( a ) :  Axis )) . (( rcw ( ( ( a ( ,  2 )) ) )) . ( P ( ( (( order_cube  ( (( lambda ((( i ( ,  j )) :  Piece )) . ( eqf  ( ( i ( ,  j )) ) ))( , ( apply_cw_rotate  ( ( p (( ,  a )( ,  2 ))) ) ))) ) )) ) ))))) + ( sum ((( a ) :  Axis )) . (( rccw ( ( ( a ( ,  0 )) ) )) . ( P ( ( (( order_cube  ( (( lambda ((( i ( ,  j )) :  Piece )) . ( eqf  ( ( i ( ,  j )) ) ))( , ( apply_ccw_rotate  ( ( p (( ,  a )( ,  0 ))) ) ))) ) )) ) ))))) + ( sum ((( a ) :  Axis )) . (( rccw ( ( ( a ( ,  2 )) ) )) . ( P ( ( (( order_cube  ( (( lambda ((( i ( ,  j )) :  Piece )) . ( eqf  ( ( i ( ,  j )) ) ))( , ( apply_ccw_rotate  ( ( p (( ,  a )( ,  2 ))) ) ))) ) )) ) ))))) ; )))( init ( P ( ( (( order_cube  ( (( lambda ((( i ( ,  j )) :  Piece )) . ( eqf  ( ( i ( ,  j )) ) ))( , ( [ (( piece  ( ( white ( , ( pos  ( ( 2 (( ,  0 )( ,  0 )( ,  X ))) ) ))) ) )(( , ( piece  ( ( white ( , ( pos  ( ( 2 (( ,  1 )( ,  0 )( ,  X ))) ) ))) ) ))( , ( piece  ( ( white ( , ( pos  ( ( 2 (( ,  2 )( ,  0 )( ,  X ))) ) ))) ) ))( , ( piece  ( ( white ( , ( pos  ( ( 2 (( ,  0 )( ,  1 )( ,  X ))) ) ))) ) ))( , ( piece  ( ( white ( , ( pos  ( ( 2 (( ,  2 )( ,  1 )( ,  X ))) ) ))) ) ))( , ( piece  ( ( white ( , ( pos  ( ( 2 (( ,  0 )( ,  2 )( ,  X ))) ) ))) ) ))( , ( piece  ( ( white ( , ( pos  ( ( 2 (( ,  1 )( ,  2 )( ,  X ))) ) ))) ) ))( , ( piece  ( ( white ( , ( pos  ( ( 2 (( ,  2 )( ,  2 )( ,  X ))) ) ))) ) )))) ] ))) ) )) ) )) ; ))
